{"version":3,"file":"History.822f7e54.js","sources":["../../src/types/moonraker.ts","../../src/Routes/Moonraker/History.tsx"],"sourcesContent":["import { PointTuple, PositionTuple } from \"./basic\";\r\n\r\nexport type MoonrakerUpdateStatus = {\r\n  [key: string]: unknown;\r\n};\r\n\r\n// TODO: Missing fade details\r\nexport interface BedMeshStatus {\r\n  profile_name: string;\r\n  mesh_min: PointTuple;\r\n  mesh_max: PointTuple;\r\n  probed_matrix: Array<Array<number>>; // Actual probed points\r\n  mesh_matrix: Array<Array<number>>; // Interpolated matrix\r\n  profiles: {\r\n    [profile_name: string]: {\r\n      points: Array<Array<number>>;\r\n      mesh_params: {\r\n        min_x: number;\r\n        max_x: number;\r\n        min_y: number;\r\n        max_y: number;\r\n        x_count: number;\r\n        y_count: number;\r\n        mesh_x_pps: number;\r\n        mesh_y_pps: number;\r\n        algo: \"lagrange\" | \"bicubic\";\r\n        tension: number;\r\n      };\r\n    };\r\n  };\r\n}\r\n\r\nexport interface ProbeStatus {\r\n  last_query: boolean;\r\n  last_z_result: number;\r\n}\r\nexport interface ZCalibrationStatus {\r\n  last_query: boolean;\r\n  last_z_offset: number;\r\n}\r\n\r\nexport interface GCodeMoveStatus {\r\n  speed_factor: number;\r\n  speed: number;\r\n  extrude_factor: number;\r\n  absolute_coordinates: boolean;\r\n  absolute_extrude: boolean;\r\n  homing_origin: PositionTuple;\r\n  position: PositionTuple;\r\n  gcode_position: PositionTuple;\r\n}\r\n\r\nexport interface DockableProbeStatus {\r\n  last_time: number;\r\n  last_state: \"ATTACHED\" | \"DOCKED\" | \"UNKNOWN\";\r\n}\r\nexport interface MotionReportStatus {\r\n  live_position: PositionTuple;\r\n  live_velocity: number;\r\n  live_extruder_velocity: number;\r\n  steppers: string[];\r\n  trapq: string[];\r\n}\r\n\r\nexport interface ToolheadStatus {\r\n  homed_axes: \"\" | \"x\" | \"y\" | \"z\" | \"xy\" | \"xz\" | \"yz\" | \"xyz\";\r\n  axis_minimum: PositionTuple;\r\n  axis_maximum: PositionTuple;\r\n  print_time: number;\r\n  stalls: number;\r\n  estimated_print_time: number;\r\n  extruder: string;\r\n  position: PositionTuple;\r\n  max_velocity: number;\r\n  max_accel: number;\r\n  max_accel_to_decel: number;\r\n  square_corner_velocity: number;\r\n}\r\n\r\nexport interface ExtruderStatus {\r\n  temperature: number;\r\n  target: number;\r\n  power: number;\r\n  can_extrude: boolean;\r\n  pressure_advance: number;\r\n  smooth_time: number;\r\n}\r\n\r\nexport interface MCU {\r\n  mcu_version: string;\r\n  mcu_build_versions: string;\r\n  mcu_constants: { [key: string]: string | number };\r\n  last_stats: {\r\n    mcu_awake: number;\r\n    mcu_task_avg: number;\r\n    mcu_task_stddev: number;\r\n    bytes_write: number;\r\n    bytes_read: number;\r\n    bytes_retransmit: number;\r\n    bytes_invalid: number;\r\n    send_seq: number;\r\n    receive_seq: number;\r\n    retransmit_seq: number;\r\n    srtt: number;\r\n    rttvar: number;\r\n    rto: number;\r\n    ready_bytes: number;\r\n    stalled_bytes: number;\r\n    freq: number;\r\n  };\r\n}\r\nexport interface MachineSystemInfo {\r\n  python: {\r\n    version: [number, number, number, string, number];\r\n    version_string: string;\r\n  };\r\n  cpu_info: {\r\n    cpu_count: number; // 4\r\n    bits: string; // \"64bit\"\r\n    processor: string; // \"aarch64\"\r\n    cpu_desc: string; // \"\"\r\n    serial_number: string; // \"10000000195cf705\"\r\n    hardware_desc: string; // \"BCM2835\"\r\n    model: string; // \"Raspberry Pi 4 Model B Rev 1.4\"\r\n    total_memory: number; // 3705688\r\n    memory_units: string; // \"kB\"\r\n  };\r\n  sd_info?: {\r\n    manufacturer_id: string; // \"03\"\r\n    manufacturer: string; // \"Sandisk\"\r\n    oem_id: string; // \"5344\"\r\n    product_name: string; // \"SN128\"\r\n    product_revision: string; // \"8.0\"\r\n    serial_number: string; // \"711addbe\"\r\n    manufacturer_date: string; // \"4/2021\"\r\n    capacity: string; // \"119.1 GiB\"\r\n    total_bytes: number; // 127865454592\r\n  };\r\n  distribution?: {\r\n    name: string; // \"Debian GNU/Linux 11 (bullseye)\";\r\n    id: string; // \"debian\";\r\n    version: string; // \"11\";\r\n    version_parts: {\r\n      major: string; //  \"11\"\r\n      minor: string; //  \"\"\r\n      build_number: string; //  \"\"\r\n    };\r\n    like: string; // \"\"\r\n    codename: string; // \"bullseye\"\r\n    release_info: unknown; // {}\r\n  };\r\n  virtualization: {\r\n    virt_type: \"none\" | string;\r\n    virt_identifier: \"none\" | string;\r\n  };\r\n  network: {\r\n    [device: string]: {\r\n      mac_address: string;\r\n      ip_addresses: Array<{\r\n        family: \"ipv4\" | \"ipv6\";\r\n        address: string;\r\n        is_link_local: boolean;\r\n      }>;\r\n    };\r\n  };\r\n  // TODO: Add more known values\r\n  available_services: \"moonraker\" | \"webcamd\" | \"klipper_mcu\" | \"klipper\" | \"KlipperScreen\" | string;\r\n  service_state: Array<{\r\n    [service: string]: {\r\n      // TODO: Add more known values\r\n      active_state: \"active\" | string;\r\n      // TODO: Add more known values\r\n      sub_state: \"running\" | string;\r\n    };\r\n  }>;\r\n}\r\n\r\nexport type MoonrakerPrinterInfo = {\r\n  state: string;\r\n  state_message: string;\r\n  hostname: string;\r\n  software_version: string;\r\n  cpu_info: string;\r\n  klipper_path: string;\r\n  python_path: string;\r\n  log_file: string;\r\n  config_file: string;\r\n};\r\n\r\nexport type MoonrakerServerInfo = {\r\n  klippy_connected: boolean;\r\n  klippy_state: string;\r\n  components: string[];\r\n  failed_components: string[];\r\n  registered_directories: string[];\r\n  warnings: string[];\r\n  websocket_count: number;\r\n  moonraker_version: string;\r\n  api_version: [number, number, number];\r\n  api_version_string: string;\r\n};\r\n\r\nexport type MoonrakerAnnouncement = {\r\n  entry_id: string;\r\n  url: string;\r\n  title: string;\r\n  description: string;\r\n  priority: string;\r\n  date: number;\r\n  dismissed: boolean;\r\n  date_dismissed?: null | number;\r\n  dismiss_wake?: unknown;\r\n  source: string;\r\n  feed: string;\r\n};\r\n\r\nexport enum JobStatus {\r\n  Completed = \"completed\",\r\n  Cancelled = \"cancelled\",\r\n  Error = \"error\",\r\n  Printing = \"printing\",\r\n  InProgress = \"in_progress\",\r\n  Server_Exit = \"server_exit\",\r\n  Klippy_Shutdown = \"klippy_shutdown\",\r\n  Klippy_Disconnect = \"klippy_disconnect\",\r\n}\r\n\r\nexport type MoonrakerJob = {\r\n  job_id: string;\r\n  exists: boolean;\r\n  end_time: number;\r\n  filament_used: number;\r\n  filename: string;\r\n  metadata: { [key: string]: unknown };\r\n  print_duration: number;\r\n  status: JobStatus;\r\n  start_time: number;\r\n  total_duration: number;\r\n};\r\n\r\nexport type MoonrakerExcludeObjectStatus = {\r\n  objects: Array<{\r\n    name: string;\r\n    center: PointTuple;\r\n    polygon: Array<PointTuple>;\r\n  }>;\r\n  excluded_objects: Array<string>;\r\n  current_object: null | string;\r\n};\r\n\r\nexport type MoonrakerProcStats = {\r\n  cpu_temp: number;\r\n  moonraker_stats: {\r\n    time: number;\r\n    cpu_usage: number;\r\n    memory: number;\r\n    mem_units: string;\r\n  };\r\n  throttled_state?: {\r\n    bits: number;\r\n    flags: string[];\r\n  };\r\n  network: {\r\n    [device_name: string]: {\r\n      rx_bytes: number;\r\n      tx_bytes: number;\r\n      bandwidth: number;\r\n    };\r\n  };\r\n  system_cpu_usage: { [key: string]: number };\r\n  system_memory: {\r\n    total: number;\r\n    available: number;\r\n    used: number;\r\n  };\r\n  websocket_connections: number;\r\n};\r\n\r\nexport type MoonrakerHistoryTotals = {\r\n  total_jobs: number;\r\n  total_time: number;\r\n  total_print_time: number;\r\n  total_filament_used: number;\r\n  longest_job: number;\r\n  longest_print: number;\r\n};\r\n","import { produce } from \"immer\";\nimport { useEffect, useState } from \"react\";\nimport { BsCheckCircle, BsClock, BsXCircle } from \"react-icons/bs\";\nimport { TbAlertTriangle } from \"react-icons/tb\";\n\nimport useMoonraker from \"../../Context/Moonraker\";\nimport { JobStatus, MoonrakerHistoryTotals, MoonrakerJob } from \"../../types\";\nimport cx from \"../../utils/cx\";\nimport { useRpcHandler } from \"../../utils/jsonrpc\";\n\nfunction ApproxLength({ length }: { length: number }) {\n  return (\n    <span>\n      {length > 100000\n        ? `${(length / 100000).toFixed(1)} km`\n        : length > 100\n        ? `${(length / 1000).toFixed(1)} m`\n        : length > 10\n        ? `${(length / 10).toFixed(1)}cm`\n        : `${length.toFixed(1)}mm`}\n    </span>\n  );\n}\nfunction ApproxDuration({ duration }: { duration: number }) {\n  return (\n    <span>\n      {duration > 3600 * 48\n        ? `${(duration / (3600 * 24)).toFixed(1)} days`\n        : duration > 3600\n        ? `${(duration / 3600).toFixed(1)} h`\n        : duration > 60\n        ? `${(duration / 60).toFixed(1)} min`\n        : `${duration.toFixed(1)}s`}\n    </span>\n  );\n}\n\nexport default function History() {\n  const { rpc } = useMoonraker();\n  const [history, setHistory] = useState<Array<MoonrakerJob>>([]);\n  const [totals, setTotals] = useState<null | MoonrakerHistoryTotals>(null);\n\n  useEffect(() => {\n    if (!rpc) return;\n\n    rpc.call(\"server.history.totals\").then(({ job_totals }) => {\n      setTotals(job_totals);\n    });\n    rpc.call(\"server.history.list\").then(({ count, jobs }) => {\n      setHistory(jobs);\n      console.log(count, jobs.length);\n    });\n  }, [rpc, setHistory, setTotals]);\n\n  useRpcHandler(rpc, \"notify_history_changed\", ([{ action, job }]) => {\n    console.log(action, job);\n\n    setHistory(\n      produce((draft) => {\n        draft.unshift(job);\n      })\n    );\n  });\n\n  return (\n    <section>\n      <h2 className={cx(\"text-xl\")}>History</h2>\n\n      <article className={cx(\"flex\", \"flex-row\")}>\n        {totals && (\n          <>\n            <div className={cx(\"card\", \"bg-base-100\", \"dark:bg-base-300\", \"shadow-xl\", \"mr-1\")}>\n              <div className={cx(\"card-body\")}>\n                <h2 className={cx(\"card-title\")}>Longest Job</h2>\n                <ApproxDuration duration={totals.longest_job} />\n              </div>\n            </div>\n\n            <div className={cx(\"card\", \"bg-base-100\", \"dark:bg-base-300\", \"shadow-xl\", \"mr-1\")}>\n              <div className={cx(\"card-body\")}>\n                <h2 className={cx(\"card-title\")}>Longest Print</h2>\n                <ApproxDuration duration={totals.longest_print} />\n              </div>\n            </div>\n\n            <div className={cx(\"card\", \"bg-base-100\", \"dark:bg-base-300\", \"shadow-xl\", \"mr-1\")}>\n              <div className={cx(\"card-body\")}>\n                <h2 className={cx(\"card-title\")}>Filament Used</h2>\n                <ApproxLength length={totals.total_filament_used} />\n              </div>\n            </div>\n\n            <div className={cx(\"card\", \"bg-base-100\", \"dark:bg-base-300\", \"shadow-xl\", \"mr-1\")}>\n              <div className={cx(\"card-body\")}>\n                <h2 className={cx(\"card-title\")}>Total Jobs</h2>\n                {totals.total_jobs}\n              </div>\n            </div>\n\n            <div className={cx(\"card\", \"bg-base-100\", \"dark:bg-base-300\", \"shadow-xl\", \"mr-1\")}>\n              <div className={cx(\"card-body\")}>\n                <h2 className={cx(\"card-title\")}>Print Time</h2>\n                <ApproxDuration duration={totals.total_print_time} />\n              </div>\n            </div>\n\n            <div className={cx(\"card\", \"bg-base-100\", \"dark:bg-base-300\", \"shadow-xl\", \"mr-1\")}>\n              <div className={cx(\"card-body\")}>\n                <h2 className={cx(\"card-title\")}>Total Time</h2>\n                <ApproxDuration duration={totals.total_time} />\n              </div>\n            </div>\n          </>\n        )}\n      </article>\n      <table className={cx(\"table\", \"table-compact\", \"text-sm\")}>\n        <thead>\n          <tr>\n            <th>Filename</th>\n            <th>Start</th>\n            <th>Status</th>\n            <th>Total Time</th>\n            <th>Print Time</th>\n            <th>Filament Used</th>\n          </tr>\n        </thead>\n        <tbody className={cx(\"text-sm\")}>\n          {history.map((job) => (\n            <tr key={job.job_id}>\n              <td className={cx(\"line-clamp-1\")}>{job.filename}</td>\n              <td>{new Date(job.start_time * 1000).toLocaleString()}</td>\n              <td title={job.status}>\n                {(() => {\n                  switch (job.status) {\n                    case JobStatus.Printing:\n                    case JobStatus.InProgress:\n                      return <BsClock size=\"1.5rem\" className={cx(\"fill-primary\", \"-m-0.5\")} />;\n                    case JobStatus.Completed:\n                      return <BsCheckCircle size=\"1.5rem\" className={cx(\"fill-success\", \"-m-0.5\")} />;\n                    case JobStatus.Cancelled:\n                      return <BsXCircle size=\"1.5rem\" className={cx(\"fill-info\", \"-m-0.5\")} />;\n                    case JobStatus.Error:\n                    case JobStatus.Server_Exit:\n                    case JobStatus.Klippy_Shutdown:\n                    case JobStatus.Klippy_Disconnect:\n                      return <TbAlertTriangle size=\"1.5rem\" className={cx(\"fill-error\", \"-m-0.5\")} />;\n                  }\n                })()}\n              </td>\n              <td>\n                <ApproxDuration duration={job.total_duration} />\n              </td>\n              <td>\n                <ApproxDuration duration={job.print_duration} />\n              </td>\n              <td>\n                <ApproxLength length={job.filament_used} />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </section>\n  );\n}\n"],"names":["length","toFixed","duration","rpc","useMoonraker","history","setHistory","useState","totals","setTotals","useEffect","call","then","job_totals","count","jobs","log","action","job","produce","draft","unshift","_jsx","cx","_jsxs","_Fragment","longest_job","longest_print","total_filament_used","total_jobs","total_print_time","total_time","map","filename","Date","start_time","toLocaleString","status","JobStatus","Printing","InProgress","Completed","Cancelled","Error","Server_Exit","Klippy_Shutdown","Klippy_Disconnect","total_duration","print_duration","filament_used","job_id"],"mappings":"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"}